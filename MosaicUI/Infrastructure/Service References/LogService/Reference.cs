//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cimpress.ACS.FP3.UIInfrastructure.LogService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LogService.ILogService", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ILogService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/GetLogMessagesFromEmitters", ReplyAction="http://tempuri.org/ILogService/GetLogMessagesFromEmittersResponse")]
        VP.FF.PT.Common.PlatformEssentials.LogInformation.LogMessageDto[] GetLogMessagesFromEmitters(string[] emitters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogService/GetLogMessagesFromEmitters", ReplyAction="http://tempuri.org/ILogService/GetLogMessagesFromEmittersResponse")]
        System.Threading.Tasks.Task<VP.FF.PT.Common.PlatformEssentials.LogInformation.LogMessageDto[]> GetLogMessagesFromEmittersAsync(string[] emitters);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILogServiceChannel : Cimpress.ACS.FP3.UIInfrastructure.LogService.ILogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogServiceClient : System.ServiceModel.ClientBase<Cimpress.ACS.FP3.UIInfrastructure.LogService.ILogService>, Cimpress.ACS.FP3.UIInfrastructure.LogService.ILogService {
        
        public LogServiceClient() {
        }
        
        public LogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public VP.FF.PT.Common.PlatformEssentials.LogInformation.LogMessageDto[] GetLogMessagesFromEmitters(string[] emitters) {
            return base.Channel.GetLogMessagesFromEmitters(emitters);
        }
        
        public System.Threading.Tasks.Task<VP.FF.PT.Common.PlatformEssentials.LogInformation.LogMessageDto[]> GetLogMessagesFromEmittersAsync(string[] emitters) {
            return base.Channel.GetLogMessagesFromEmittersAsync(emitters);
        }
    }
}
