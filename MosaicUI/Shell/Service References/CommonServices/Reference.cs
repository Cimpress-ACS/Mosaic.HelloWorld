//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MosaicSample.Shell.CommonServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommonServicesFault", Namespace="http://schemas.datacontract.org/2004/07/MosaicSample.CommonServices")]
    [System.SerializableAttribute()]
    public partial class CommonServicesFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlatformStateDTO", Namespace="http://schemas.datacontract.org/2004/07/MosaicSample.CommonServices")]
    public enum PlatformStateDTO : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Idle = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Production = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StoppedAll = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CommonServices.ICommonServices", CallbackContract=typeof(MosaicSample.Shell.CommonServices.ICommonServicesCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ICommonServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/SubscribeEvents", ReplyAction="http://tempuri.org/ICommonServices/SubscribeEventsResponse")]
        void SubscribeEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/SubscribeEvents", ReplyAction="http://tempuri.org/ICommonServices/SubscribeEventsResponse")]
        System.Threading.Tasks.Task SubscribeEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/SubscribeModuleStateEvents", ReplyAction="http://tempuri.org/ICommonServices/SubscribeModuleStateEventsResponse")]
        void SubscribeModuleStateEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/SubscribeModuleStateEvents", ReplyAction="http://tempuri.org/ICommonServices/SubscribeModuleStateEventsResponse")]
        System.Threading.Tasks.Task SubscribeModuleStateEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/UnsubscribeEvents", ReplyAction="http://tempuri.org/ICommonServices/UnsubscribeEventsResponse")]
        void UnsubscribeEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/UnsubscribeEvents", ReplyAction="http://tempuri.org/ICommonServices/UnsubscribeEventsResponse")]
        System.Threading.Tasks.Task UnsubscribeEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/get_LineControlVersion", ReplyAction="http://tempuri.org/ICommonServices/get_LineControlVersionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MosaicSample.Shell.CommonServices.CommonServicesFault), Action="http://tempuri.org/ICommonServices/get_LineControlVersionCommonServicesFaultFault" +
            "", Name="CommonServicesFault", Namespace="http://schemas.datacontract.org/2004/07/MosaicSample.CommonServices")]
        string get_LineControlVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/get_LineControlVersion", ReplyAction="http://tempuri.org/ICommonServices/get_LineControlVersionResponse")]
        System.Threading.Tasks.Task<string> get_LineControlVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/get_IsAliveAndInitialized", ReplyAction="http://tempuri.org/ICommonServices/get_IsAliveAndInitializedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MosaicSample.Shell.CommonServices.CommonServicesFault), Action="http://tempuri.org/ICommonServices/get_IsAliveAndInitializedCommonServicesFaultFa" +
            "ult", Name="CommonServicesFault", Namespace="http://schemas.datacontract.org/2004/07/MosaicSample.CommonServices")]
        bool get_IsAliveAndInitialized();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/get_IsAliveAndInitialized", ReplyAction="http://tempuri.org/ICommonServices/get_IsAliveAndInitializedResponse")]
        System.Threading.Tasks.Task<bool> get_IsAliveAndInitializedAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/StartAll", ReplyAction="http://tempuri.org/ICommonServices/StartAllResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MosaicSample.Shell.CommonServices.CommonServicesFault), Action="http://tempuri.org/ICommonServices/StartAllCommonServicesFaultFault", Name="CommonServicesFault", Namespace="http://schemas.datacontract.org/2004/07/MosaicSample.CommonServices")]
        void StartAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/StartAll", ReplyAction="http://tempuri.org/ICommonServices/StartAllResponse")]
        System.Threading.Tasks.Task StartAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/StopAll", ReplyAction="http://tempuri.org/ICommonServices/StopAllResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MosaicSample.Shell.CommonServices.CommonServicesFault), Action="http://tempuri.org/ICommonServices/StopAllCommonServicesFaultFault", Name="CommonServicesFault", Namespace="http://schemas.datacontract.org/2004/07/MosaicSample.CommonServices")]
        void StopAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/StopAll", ReplyAction="http://tempuri.org/ICommonServices/StopAllResponse")]
        System.Threading.Tasks.Task StopAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetModuleGraph", ReplyAction="http://tempuri.org/ICommonServices/GetModuleGraphResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MosaicSample.Shell.CommonServices.CommonServicesFault), Action="http://tempuri.org/ICommonServices/GetModuleGraphCommonServicesFaultFault", Name="CommonServicesFault", Namespace="http://schemas.datacontract.org/2004/07/MosaicSample.CommonServices")]
        VP.FF.PT.Common.PlatformEssentials.ItemFlow.DTOs.ModuleGraphDTO GetModuleGraph();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/GetModuleGraph", ReplyAction="http://tempuri.org/ICommonServices/GetModuleGraphResponse")]
        System.Threading.Tasks.Task<VP.FF.PT.Common.PlatformEssentials.ItemFlow.DTOs.ModuleGraphDTO> GetModuleGraphAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/RequestStates", ReplyAction="http://tempuri.org/ICommonServices/RequestStatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MosaicSample.Shell.CommonServices.CommonServicesFault), Action="http://tempuri.org/ICommonServices/RequestStatesCommonServicesFaultFault", Name="CommonServicesFault", Namespace="http://schemas.datacontract.org/2004/07/MosaicSample.CommonServices")]
        VP.FF.PT.Common.PlatformEssentials.Entities.DTOs.PlatformModuleDTO[] RequestStates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/RequestStates", ReplyAction="http://tempuri.org/ICommonServices/RequestStatesResponse")]
        System.Threading.Tasks.Task<VP.FF.PT.Common.PlatformEssentials.Entities.DTOs.PlatformModuleDTO[]> RequestStatesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommonServicesCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICommonServices/PlatformModuleStateChanged")]
        void PlatformModuleStateChanged(VP.FF.PT.Common.PlatformEssentials.Entities.DTOs.PlatformModuleDTO platformModule);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICommonServices/PlatformStateChanged")]
        void PlatformStateChanged(MosaicSample.Shell.CommonServices.PlatformStateDTO platformState);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICommonServices/ResetIgnoreDownstreamModules")]
        void ResetIgnoreDownstreamModules();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICommonServices/ModuleInitializationStarted")]
        void ModuleInitializationStarted(string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICommonServices/ModuleManualModeChanged")]
        void ModuleManualModeChanged(bool controllerManualMode, string moduleName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICommonServices/SimulationModeChanged")]
        void SimulationModeChanged(string moduleName, bool controllerSimulationMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonServices/RequestShutdown", ReplyAction="http://tempuri.org/ICommonServices/RequestShutdownResponse")]
        void RequestShutdown();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommonServicesChannel : MosaicSample.Shell.CommonServices.ICommonServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommonServicesClient : System.ServiceModel.DuplexClientBase<MosaicSample.Shell.CommonServices.ICommonServices>, MosaicSample.Shell.CommonServices.ICommonServices {
        
        public CommonServicesClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CommonServicesClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CommonServicesClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServicesClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServicesClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void SubscribeEvents() {
            base.Channel.SubscribeEvents();
        }
        
        public System.Threading.Tasks.Task SubscribeEventsAsync() {
            return base.Channel.SubscribeEventsAsync();
        }
        
        public void SubscribeModuleStateEvents() {
            base.Channel.SubscribeModuleStateEvents();
        }
        
        public System.Threading.Tasks.Task SubscribeModuleStateEventsAsync() {
            return base.Channel.SubscribeModuleStateEventsAsync();
        }
        
        public void UnsubscribeEvents() {
            base.Channel.UnsubscribeEvents();
        }
        
        public System.Threading.Tasks.Task UnsubscribeEventsAsync() {
            return base.Channel.UnsubscribeEventsAsync();
        }
        
        public string get_LineControlVersion() {
            return base.Channel.get_LineControlVersion();
        }
        
        public System.Threading.Tasks.Task<string> get_LineControlVersionAsync() {
            return base.Channel.get_LineControlVersionAsync();
        }
        
        public bool get_IsAliveAndInitialized() {
            return base.Channel.get_IsAliveAndInitialized();
        }
        
        public System.Threading.Tasks.Task<bool> get_IsAliveAndInitializedAsync() {
            return base.Channel.get_IsAliveAndInitializedAsync();
        }
        
        public void StartAll() {
            base.Channel.StartAll();
        }
        
        public System.Threading.Tasks.Task StartAllAsync() {
            return base.Channel.StartAllAsync();
        }
        
        public void StopAll() {
            base.Channel.StopAll();
        }
        
        public System.Threading.Tasks.Task StopAllAsync() {
            return base.Channel.StopAllAsync();
        }
        
        public VP.FF.PT.Common.PlatformEssentials.ItemFlow.DTOs.ModuleGraphDTO GetModuleGraph() {
            return base.Channel.GetModuleGraph();
        }
        
        public System.Threading.Tasks.Task<VP.FF.PT.Common.PlatformEssentials.ItemFlow.DTOs.ModuleGraphDTO> GetModuleGraphAsync() {
            return base.Channel.GetModuleGraphAsync();
        }
        
        public VP.FF.PT.Common.PlatformEssentials.Entities.DTOs.PlatformModuleDTO[] RequestStates() {
            return base.Channel.RequestStates();
        }
        
        public System.Threading.Tasks.Task<VP.FF.PT.Common.PlatformEssentials.Entities.DTOs.PlatformModuleDTO[]> RequestStatesAsync() {
            return base.Channel.RequestStatesAsync();
        }
    }
}
