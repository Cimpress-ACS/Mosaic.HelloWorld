//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MosaicSample.Shell.ConfigurationService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConfigurationService.IConfigurationService")]
    public interface IConfigurationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/KeepAlive", ReplyAction="http://tempuri.org/IConfigurationService/KeepAliveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VP.FF.PT.Common.PlatformEssentials.ConfigurationService.ConfigurationFault), Action="http://tempuri.org/IConfigurationService/KeepAliveConfigurationFaultFault", Name="ConfigurationFault", Namespace="http://schemas.datacontract.org/2004/07/VP.FF.PT.Common.PlatformEssentials.Config" +
            "urationService")]
        bool KeepAlive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/KeepAlive", ReplyAction="http://tempuri.org/IConfigurationService/KeepAliveResponse")]
        System.Threading.Tasks.Task<bool> KeepAliveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetValue", ReplyAction="http://tempuri.org/IConfigurationService/GetValueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VP.FF.PT.Common.PlatformEssentials.ConfigurationService.ConfigurationFault), Action="http://tempuri.org/IConfigurationService/GetValueConfigurationFaultFault", Name="ConfigurationFault", Namespace="http://schemas.datacontract.org/2004/07/VP.FF.PT.Common.PlatformEssentials.Config" +
            "urationService")]
        string GetValue(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetValue", ReplyAction="http://tempuri.org/IConfigurationService/GetValueResponse")]
        System.Threading.Tasks.Task<string> GetValueAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetBoolValue", ReplyAction="http://tempuri.org/IConfigurationService/GetBoolValueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VP.FF.PT.Common.PlatformEssentials.ConfigurationService.ConfigurationFault), Action="http://tempuri.org/IConfigurationService/GetBoolValueConfigurationFaultFault", Name="ConfigurationFault", Namespace="http://schemas.datacontract.org/2004/07/VP.FF.PT.Common.PlatformEssentials.Config" +
            "urationService")]
        bool GetBoolValue(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetBoolValue", ReplyAction="http://tempuri.org/IConfigurationService/GetBoolValueResponse")]
        System.Threading.Tasks.Task<bool> GetBoolValueAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SetValue", ReplyAction="http://tempuri.org/IConfigurationService/SetValueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VP.FF.PT.Common.PlatformEssentials.ConfigurationService.ConfigurationFault), Action="http://tempuri.org/IConfigurationService/SetValueConfigurationFaultFault", Name="ConfigurationFault", Namespace="http://schemas.datacontract.org/2004/07/VP.FF.PT.Common.PlatformEssentials.Config" +
            "urationService")]
        void SetValue(string key, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SetValue", ReplyAction="http://tempuri.org/IConfigurationService/SetValueResponse")]
        System.Threading.Tasks.Task SetValueAsync(string key, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SetBoolValue", ReplyAction="http://tempuri.org/IConfigurationService/SetBoolValueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VP.FF.PT.Common.PlatformEssentials.ConfigurationService.ConfigurationFault), Action="http://tempuri.org/IConfigurationService/SetBoolValueConfigurationFaultFault", Name="ConfigurationFault", Namespace="http://schemas.datacontract.org/2004/07/VP.FF.PT.Common.PlatformEssentials.Config" +
            "urationService")]
        void SetBoolValue(string key, bool value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/SetBoolValue", ReplyAction="http://tempuri.org/IConfigurationService/SetBoolValueResponse")]
        System.Threading.Tasks.Task SetBoolValueAsync(string key, bool value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetAllKeys", ReplyAction="http://tempuri.org/IConfigurationService/GetAllKeysResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VP.FF.PT.Common.PlatformEssentials.ConfigurationService.ConfigurationFault), Action="http://tempuri.org/IConfigurationService/GetAllKeysConfigurationFaultFault", Name="ConfigurationFault", Namespace="http://schemas.datacontract.org/2004/07/VP.FF.PT.Common.PlatformEssentials.Config" +
            "urationService")]
        string[] GetAllKeys();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/GetAllKeys", ReplyAction="http://tempuri.org/IConfigurationService/GetAllKeysResponse")]
        System.Threading.Tasks.Task<string[]> GetAllKeysAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/get_IsInitialized", ReplyAction="http://tempuri.org/IConfigurationService/get_IsInitializedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(VP.FF.PT.Common.PlatformEssentials.ConfigurationService.ConfigurationFault), Action="http://tempuri.org/IConfigurationService/get_IsInitializedConfigurationFaultFault" +
            "", Name="ConfigurationFault", Namespace="http://schemas.datacontract.org/2004/07/VP.FF.PT.Common.PlatformEssentials.Config" +
            "urationService")]
        bool get_IsInitialized();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConfigurationService/get_IsInitialized", ReplyAction="http://tempuri.org/IConfigurationService/get_IsInitializedResponse")]
        System.Threading.Tasks.Task<bool> get_IsInitializedAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConfigurationServiceChannel : MosaicSample.Shell.ConfigurationService.IConfigurationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConfigurationServiceClient : System.ServiceModel.ClientBase<MosaicSample.Shell.ConfigurationService.IConfigurationService>, MosaicSample.Shell.ConfigurationService.IConfigurationService {
        
        public ConfigurationServiceClient() {
        }
        
        public ConfigurationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConfigurationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConfigurationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConfigurationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool KeepAlive() {
            return base.Channel.KeepAlive();
        }
        
        public System.Threading.Tasks.Task<bool> KeepAliveAsync() {
            return base.Channel.KeepAliveAsync();
        }
        
        public string GetValue(string key) {
            return base.Channel.GetValue(key);
        }
        
        public System.Threading.Tasks.Task<string> GetValueAsync(string key) {
            return base.Channel.GetValueAsync(key);
        }
        
        public bool GetBoolValue(string key) {
            return base.Channel.GetBoolValue(key);
        }
        
        public System.Threading.Tasks.Task<bool> GetBoolValueAsync(string key) {
            return base.Channel.GetBoolValueAsync(key);
        }
        
        public void SetValue(string key, string value) {
            base.Channel.SetValue(key, value);
        }
        
        public System.Threading.Tasks.Task SetValueAsync(string key, string value) {
            return base.Channel.SetValueAsync(key, value);
        }
        
        public void SetBoolValue(string key, bool value) {
            base.Channel.SetBoolValue(key, value);
        }
        
        public System.Threading.Tasks.Task SetBoolValueAsync(string key, bool value) {
            return base.Channel.SetBoolValueAsync(key, value);
        }
        
        public string[] GetAllKeys() {
            return base.Channel.GetAllKeys();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllKeysAsync() {
            return base.Channel.GetAllKeysAsync();
        }
        
        public bool get_IsInitialized() {
            return base.Channel.get_IsInitialized();
        }
        
        public System.Threading.Tasks.Task<bool> get_IsInitializedAsync() {
            return base.Channel.get_IsInitializedAsync();
        }
    }
}
